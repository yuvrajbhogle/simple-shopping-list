{"version":3,"sources":["App.js","index.js"],"names":["App","useState","itemName","quantity","isSelected","items","setItems","inputValue","setInputValue","totalItemCount","setTotalItemCount","calculateTotal","reduce","total","item","className","value","onChange","event","target","placeholder","icon","faPlus","onClick","newItem","newItems","handleAddButtonClick","map","index","toggleComplete","faCheckCircle","faCircle","handleQuantityDecrease","faChevronLeft","handleQuantityIncrease","faChevronRight","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAyGeA,EApGH,WAEX,MAA0BC,mBAAS,CAClC,CAAEC,SAAU,SAAUC,SAAU,EAAGC,YAAY,GAC/C,CAAEF,SAAU,SAAUC,SAAU,EAAGC,YAAY,GAC/C,CAAEF,SAAU,SAAUC,SAAU,EAAGC,YAAY,KAHhD,mBAAOC,EAAP,KAAcC,EAAd,KAMA,EAAoCL,mBAAS,IAA7C,mBAAOM,EAAP,KAAmBC,EAAnB,KACA,EAA4CP,mBAAS,GAArD,mBAAOQ,EAAP,KAAuBC,EAAvB,KA0CMC,EAAiB,WACtB,IAAMF,EAAiBJ,EAAMO,QAAO,SAACC,EAAOC,GAC3C,OAAOD,EAAQC,EAAKX,WAClB,GAEHO,EAAkBD,IAGnB,OACC,yBAAKM,UAAU,kBACd,yBAAKA,UAAU,kBACd,yBAAKA,UAAU,gBACd,2BAAOC,MAAOT,EAAYU,SAAU,SAACC,GAAD,OAAWV,EAAcU,EAAMC,OAAOH,QAAQD,UAAU,iBAAiBK,YAAY,mBACzH,kBAAC,IAAD,CAAiBC,KAAMC,IAAQC,QAAS,kBArDf,WAC5B,IAAMC,EAAU,CACftB,SAAUK,EACVJ,SAAU,EACVC,YAAY,GAGPqB,EAAQ,sBAAOpB,GAAP,CAAcmB,IAE5BlB,EAASmB,GACTjB,EAAc,IACdG,IA0CiDe,OAE/C,yBAAKX,UAAU,aACbV,EAAMsB,KAAI,SAACb,EAAMc,GAAP,OACV,yBAAKb,UAAU,kBACd,yBAAKA,UAAU,YAAYQ,QAAS,kBA1BnB,SAACK,GACvB,IAAMH,EAAQ,YAAOpB,GAErBoB,EAASG,GAAOxB,YAAcqB,EAASG,GAAOxB,WAE9CE,EAASmB,GAqBsCI,CAAeD,KACvDd,EAAKV,WACL,oCACC,kBAAC,IAAD,CAAiBiB,KAAMS,MACvB,0BAAMf,UAAU,aAAaD,EAAKZ,WAGnC,oCACC,kBAAC,IAAD,CAAiBmB,KAAMU,MACvB,8BAAOjB,EAAKZ,YAIf,yBAAKa,UAAU,YACd,4BAAQQ,QAAS,kBAjDO,SAACK,GAC/B,IAAMH,EAAQ,YAAOpB,GAErBoB,EAASG,GAAOzB,WAEhBG,EAASmB,GACTd,IA2C6BqB,CAAuBJ,KAC7C,kBAAC,IAAD,CAAiBP,KAAMY,OAExB,kCAAQnB,EAAKX,SAAb,KACA,4BAAQoB,QAAS,kBA9DO,SAACK,GAC/B,IAAMH,EAAQ,YAAOpB,GAErBoB,EAASG,GAAOzB,WAEhBG,EAASmB,GACTd,IAwD6BuB,CAAuBN,KAC7C,kBAAC,IAAD,CAAiBP,KAAMc,aAM5B,yBAAKpB,UAAU,SAAf,UAA+BN,MC9FnC2B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.95ab2a68.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './index.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronRight, faChevronLeft, faCircle, faCheckCircle, faPlus } from '@fortawesome/free-solid-svg-icons';\n\nconst App = () => {\n\t// HINT: each \"item\" in our list names a name, a boolean to tell if its been completed, and a quantity\n\tconst [items, setItems] = useState([\n\t\t{ itemName: 'item 1', quantity: 1, isSelected: false },\n\t\t{ itemName: 'item 2', quantity: 3, isSelected: true },\n\t\t{ itemName: 'item 3', quantity: 2, isSelected: false },\n\t]);\n\n\tconst [inputValue, setInputValue] = useState('');\n\tconst [totalItemCount, setTotalItemCount] = useState(6);\n\n\tconst handleAddButtonClick = () => {\n\t\tconst newItem = {\n\t\t\titemName: inputValue,\n\t\t\tquantity: 1,\n\t\t\tisSelected: false,\n\t\t};\n\n\t\tconst newItems = [...items, newItem];\n\n\t\tsetItems(newItems);\n\t\tsetInputValue('');\n\t\tcalculateTotal();\n\t};\n\n\tconst handleQuantityIncrease = (index) => {\n\t\tconst newItems = [...items];\n\n\t\tnewItems[index].quantity++;\n\n\t\tsetItems(newItems);\n\t\tcalculateTotal();\n\t};\n\n\tconst handleQuantityDecrease = (index) => {\n\t\tconst newItems = [...items];\n\n\t\tnewItems[index].quantity--;\n\n\t\tsetItems(newItems);\n\t\tcalculateTotal();\n\t};\n\n\tconst toggleComplete = (index) => {\n\t\tconst newItems = [...items];\n\n\t\tnewItems[index].isSelected = !newItems[index].isSelected;\n\n\t\tsetItems(newItems);\n\t};\n\n\tconst calculateTotal = () => {\n\t\tconst totalItemCount = items.reduce((total, item) => {\n\t\t\treturn total + item.quantity;\n\t\t}, 0);\n\n\t\tsetTotalItemCount(totalItemCount);\n\t};\n\n\treturn (\n\t\t<div className='app-background'>\n\t\t\t<div className='main-container'>\n\t\t\t\t<div className='add-item-box'>\n\t\t\t\t\t<input value={inputValue} onChange={(event) => setInputValue(event.target.value)} className='add-item-input' placeholder='Add an item...' />\n\t\t\t\t\t<FontAwesomeIcon icon={faPlus} onClick={() => handleAddButtonClick()} />\n\t\t\t\t</div>\n\t\t\t\t<div className='item-list'>\n\t\t\t\t\t{items.map((item, index) => (\n\t\t\t\t\t\t<div className='item-container'>\n\t\t\t\t\t\t\t<div className='item-name' onClick={() => toggleComplete(index)}>\n\t\t\t\t\t\t\t\t{item.isSelected ? (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faCheckCircle} />\n\t\t\t\t\t\t\t\t\t\t<span className='completed'>{item.itemName}</span>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faCircle} />\n\t\t\t\t\t\t\t\t\t\t<span>{item.itemName}</span>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='quantity'>\n\t\t\t\t\t\t\t\t<button onClick={() => handleQuantityDecrease(index)}>\n\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faChevronLeft} />\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<span> {item.quantity} </span>\n\t\t\t\t\t\t\t\t<button onClick={() => handleQuantityIncrease(index)}>\n\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faChevronRight} />\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t\t<div className='total'>Total: {totalItemCount}</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}